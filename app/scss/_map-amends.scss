// Additional map of colors to add to Bootstrap
$custom-colors: (
    "yellow-green": $yellow-green,
    "yellow-green-300": $yellow-green-300,
    "green-yellow": $green-yellow,
    "green-yellow-300": $green-yellow-300,
    "gray": $gray-200,
    "gray-150": $gray-150,
    "green": $green,
    "green-300": $green-300,
    "yellow-300": $yellow-300,
    "red-300": $red-300,    
);

// Merge with Bootstrap's colors
$theme-colors: map-merge($theme-colors, $custom-colors);


// Additional border width properties
$custom-border-widths: (
    "1point5": 1.5px
);

// Merge with Bootstrap's border widths
$border-widths: map-merge($border-widths, $custom-border-widths);


// Additional breakpoint properties
$custom-breakpoints: (
    xs_sm: 475px,
    sm_md: 672px,
    md_lg: 880px,
    lg_xl: 1100px,
);

@function map-sort-by-values($map) {
    // Transform map to zipped list
    $keys: ();
    $values: ();
  
    @each $key, $val in $map {
        $keys: append($keys, $key);
        $values: append($values, $val);
    }
  
    $list: zip($keys, $values);
  
    $sortedMap: ();
    @while length($list) > 0 {
  
        // Find smallest pair
        $smallestPair: nth($list, 1);
        @each $pair in $list {
            $value: nth($pair, 2);
            $smallestValue: nth($smallestPair, 2);
            @if $value < $smallestValue {
                $smallestPair: $pair;
            }
        }
    
        // Add smallest pair to sorted map
        $key: nth($smallestPair, 1);
        $value: nth($smallestPair, 2);
        $sortedMap: map-merge($sortedMap, ($key: $value));
    
        // Remove from list smallest pair
        $smallestPairIndex: index($list, $smallestPair);
        $newList: ();
        @for $i from 1 through length($list) {
            @if $i != $smallestPairIndex {
                $newList: append($newList, nth($list, $i), "space");
            }
        }
        $list: $newList;
    }
  
    @return $sortedMap;
}

$grid-breakpoints: map-sort-by-values(map-merge($grid-breakpoints, $custom-breakpoints));